basePath: /api/v1
definitions:
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.StatusResponse:
    properties:
      status:
        type: string
    type: object
  api.UpdateTitleRequest:
    properties:
      title:
        type: string
    type: object
  llm.DeleteModelRequest:
    properties:
      name:
        type: string
    type: object
  llm.ListModelsResponse:
    properties:
      models:
        items:
          $ref: '#/definitions/llm.Model'
        type: array
    type: object
  llm.Model:
    properties:
      modified_at:
        type: string
      name:
        type: string
      size:
        type: integer
    type: object
  llm.ModelInfo:
    properties:
      modelfile:
        type: string
      parameters:
        type: string
      template:
        type: string
    type: object
  llm.PullModelRequest:
    properties:
      name:
        type: string
      stream:
        type: boolean
    type: object
  llm.PullStatus:
    properties:
      completed:
        type: integer
      digest:
        type: string
      error:
        type: string
      status:
        type: string
      total:
        type: integer
    type: object
  llm.RequestOptions:
    properties:
      repeat_penalty:
        type: number
      seed:
        type: integer
      system:
        type: string
      temperature:
        type: number
      top_k:
        type: integer
      top_p:
        type: number
    type: object
  llm.ShowModelRequest:
    properties:
      name:
        type: string
    type: object
  model.Chat:
    properties:
      created_at:
        example: "2025-09-08T14:00:00Z"
        type: string
      id:
        example: 4b3b5a34-571f-47e3-abd1-a7dbee9d92fe
        type: string
      model:
        example: qwen:0.5b
        type: string
      title:
        example: History of the Roman Empire
        type: string
      updated_at:
        example: "2025-09-08T14:05:00Z"
        type: string
      user_id:
        example: default-user
        type: string
    type: object
  model.FullChat:
    properties:
      created_at:
        example: "2025-09-08T14:00:00Z"
        type: string
      id:
        example: 4b3b5a34-571f-47e3-abd1-a7dbee9d92fe
        type: string
      messages:
        items:
          $ref: '#/definitions/model.Message'
        type: array
      model:
        example: qwen:0.5b
        type: string
      title:
        example: History of the Roman Empire
        type: string
      updated_at:
        example: "2025-09-08T14:05:00Z"
        type: string
      user_id:
        example: default-user
        type: string
    type: object
  model.Message:
    properties:
      content:
        example: The Roman Empire fell in 476 AD.
        type: string
      id:
        example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        type: string
      metadata:
        type: object
      model:
        example: qwen:0.5b
        type: string
      parent_id:
        example: f0e9d8c7-b6a5-4321-fedc-ba9876543210
        type: string
      role:
        example: assistant
        type: string
      timestamp:
        example: "2025-09-08T14:05:00Z"
        type: string
    type: object
  model.StreamResponse:
    properties:
      content:
        example: Hello
        type: string
      context:
        type: object
      done:
        example: false
        type: boolean
      error:
        type: string
    type: object
  service.CreateMessageRequest:
    properties:
      chat_id:
        type: string
      content:
        type: string
      model:
        type: string
      options:
        $ref: '#/definitions/llm.RequestOptions'
      support_model:
        type: string
      system_prompt:
        type: string
    type: object
  service.RegenerateMessageRequest:
    properties:
      chat_id:
        description: Included for context
        type: string
      model:
        type: string
      options:
        $ref: '#/definitions/llm.RequestOptions'
      system_prompt:
        type: string
    type: object
  service.Settings:
    properties:
      main_model:
        type: string
      support_model:
        type: string
      system_prompt:
        type: string
    type: object
info:
  contact:
    name: API Support
    url: https://github.com/ykvit/flow-ai
  description: This is the API server for the Flow-AI application, providing endpoints
    for chat, model management, and settings.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Flow-AI Backend API
  version: "1.0"
paths:
  /v1/chats:
    get:
      description: Retrieves a list of all chats, sorted by the most recently updated.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Chat'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List all chats
      tags:
      - Chats
  /v1/chats/{chatID}:
    delete:
      description: Permanently deletes a chat and all its associated messages.
      parameters:
      - description: Chat ID
        in: path
        name: chatID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete a chat
      tags:
      - Chats
    get:
      description: Retrieves the full history for a single chat's active branch.
      parameters:
      - description: Chat ID
        in: path
        name: chatID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FullChat'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get a single chat
      tags:
      - Chats
  /v1/chats/{chatID}/messages/{messageID}/regenerate:
    post:
      consumes:
      - application/json
      description: Creates a new response for a previous user prompt.
      parameters:
      - description: Chat ID
        in: path
        name: chatID
        required: true
        type: string
      - description: The ID of the assistant message to regenerate
        in: path
        name: messageID
        required: true
        type: string
      - description: Regeneration options
        in: body
        name: regenRequest
        required: true
        schema:
          $ref: '#/definitions/service.RegenerateMessageRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of new response chunks
          schema:
            $ref: '#/definitions/model.StreamResponse'
        "400":
          description: Sent as a stream error event
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Sent as a stream error event
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Regenerate a message
      tags:
      - Chats
  /v1/chats/{chatID}/title:
    put:
      consumes:
      - application/json
      description: Manually renames a chat.
      parameters:
      - description: Chat ID
        in: path
        name: chatID
        required: true
        type: string
      - description: New title
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/api.UpdateTitleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update a chat's title
      tags:
      - Chats
  /v1/chats/messages:
    post:
      consumes:
      - application/json
      description: Sends a new message and initiates a real-time stream of the assistant's
        response.
      parameters:
      - description: Message Request
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/service.CreateMessageRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of response chunks
          schema:
            $ref: '#/definitions/model.StreamResponse'
        "400":
          description: Sent as a stream error event
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a message and stream the response
      tags:
      - Chats
  /v1/models:
    delete:
      consumes:
      - application/json
      description: Deletes a model from the local Ollama storage.
      parameters:
      - description: Model Name to Delete
        in: body
        name: modelRequest
        required: true
        schema:
          $ref: '#/definitions/llm.DeleteModelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete a local model
      tags:
      - Models
    get:
      description: Gets a list of all models available locally in Ollama.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/llm.ListModelsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List local models
      tags:
      - Models
  /v1/models/pull:
    post:
      consumes:
      - application/json
      description: Downloads a model from the Ollama registry. This is a streaming
        endpoint.
      parameters:
      - description: Model Name to Pull
        in: body
        name: modelRequest
        required: true
        schema:
          $ref: '#/definitions/llm.PullModelRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of progress status
          schema:
            $ref: '#/definitions/llm.PullStatus'
        "400":
          description: Sent as a stream error event
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Pull a new model
      tags:
      - Models
  /v1/models/show:
    post:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific model.
      parameters:
      - description: Model Name
        in: body
        name: modelRequest
        required: true
        schema:
          $ref: '#/definitions/llm.ShowModelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/llm.ModelInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Show model info
      tags:
      - Models
  /v1/settings:
    get:
      description: Retrieves the current global settings for the application.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Settings'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get application settings
      tags:
      - Settings
    post:
      consumes:
      - application/json
      description: Updates the global settings. Models must be available in Ollama.
      parameters:
      - description: New settings to apply
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/service.Settings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update application settings
      tags:
      - Settings
swagger: "2.0"
