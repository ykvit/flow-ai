# =================================================================
# Stage 1: Frontend Builder
# =================================================================
FROM node:20-alpine AS builder-frontend
WORKDIR /app
COPY frontend/package.json frontend/package-lock.json* ./
RUN npm install
COPY frontend/ ./
RUN npm run build

# =================================================================
# Stage 2: Backend Builder & Developer's Toolbox
# =================================================================
# This stage contains all tools needed for development, linting, and docs.
FROM golang:1.24.7-alpine AS builder-backend
WORKDIR /src

RUN apk add --no-cache build-base
RUN addgroup -S appgroup -g 1001 && adduser -S appuser -u 1001 -G appgroup

# Pinned all tool versions for reproducible builds.
# Swag version updated to a stable patch release without go.mod issues.
RUN apk add --no-cache build-base git
RUN go install golang.org/x/tools/cmd/goimports@v0.37.0
RUN go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.5.0
RUN go install github.com/swaggo/swag/cmd/swag@v1.16.6

COPY backend/go.mod backend/go.sum ./
RUN go mod download
COPY backend/ ./
RUN go build -ldflags="-w -s" -o ./server ./cmd/server
RUN chown -R appuser:appgroup /src

# =================================================================
# Stage 3: Final Production Image
# =================================================================
FROM alpine:3.22 AS final
WORKDIR /app
RUN apk add --no-cache nginx ca-certificates
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

COPY --from=builder-backend /src/server /usr/local/bin/server
# The 'docs' are generated by the developer using 'make swag' and copied from the host.
COPY backend/docs /app/docs
COPY --from=builder-frontend /app/dist /app/frontend/dist

COPY nginx.conf /etc/nginx/nginx.conf
COPY --chmod=755 docker/entrypoint.sh /entrypoint.sh
RUN chown -R appuser:appgroup /app && \
    mkdir -p /data /var/log/nginx /var/lib/nginx/tmp && \
    chown -R appuser:appgroup /data /var/log/nginx /var/lib/nginx

USER appuser
EXPOSE 80
ENTRYPOINT ["/entrypoint.sh"]