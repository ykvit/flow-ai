.inputAreaContainer {
  position: absolute;
  width: 750px;
  max-width: 90%;
  height: 100px;
  left: 50%;
  transform: translateX(-50%);
  bottom: 32px;
  z-index: 100;
  overflow: visible; 
}

.inputBgBlur {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  bottom: 0;
  background: linear-gradient(90deg, var(--gradient-start) 0%, var(--gradient-middle) 50%, var(--gradient-end) 100%);
  background-size: 100% 100%; 
  filter: blur(15px);
  border-radius: 33px;
  z-index: 1;
  transition: background 0.5s ease;
}
  
.inputBgWhite {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  bottom: 0;
  background: rgba(255, 255, 255);
  border-radius: 33px; 
  z-index: 2;
  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1); 
}

@keyframes animateGradientFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}



.inputAreaContainer.loading .inputBgBlur {
  background: linear-gradient(90deg,


    var(--gradient-start) 0%,
    var(--gradient-start) 5%,
    var(--gradient-middle) 15%,
    var(--gradient-middle) 25%,
    var(--gradient-end) 35%,
    var(--gradient-end) 45%,
    var(--gradient-start) 50%,
    var(--gradient-start) 55%,
    var(--gradient-middle) 65%,
    var(--gradient-middle) 75%,
    var(--gradient-end) 85%,
    var(--gradient-end) 95%,
    var(--gradient-middle) 100%
  );

  background-size: 600% 100%;
  animation: animateGradientFlow 10s linear infinite;
  filter: blur(33px);
  opacity: 5;
  transform: none;
}

.inputPlaceholderText {
  position: absolute;
  top: 10px; 
  left: 25px;
  right: 60px; 
  height: 50px; 
  display: flex; 
  align-items: center; 
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
  font-size: 20px;
  color: var(--text-color-placeholder);
  z-index: 3;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.chatInput {
  position: absolute;
  top: 10px; 
  left: 25px;
  right: 60px; 
  height: 50px;
  background: transparent;
  border: none;
  outline: none;
  color: var(--text-color-dark);
  font-family: 'Roboto', sans-serif;
  font-size: 20px;
  padding: 0; 
  z-index: 4;
}


.actionButton {
  /* ... */
  position: absolute;
  bottom: 18px;
  z-index: 5;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-sizing: border-box;
  height: 32px;
  border: none;
  transition: background-color 0.2s ease, border-color 0.2s ease, opacity 0.2s ease, color 0.2s ease; /* Додаємо color */
}

.sendStopBase { /* Базові стилі для обох станів */
  width: 32px;
  right: 25px;
  padding: 0;
  border-radius: 16px; /* Кругла */
}
.sendStopBase svg { /* Розмір іконки для обох */
  width: 16px;
  height: 16px;
  display: block;
  fill: currentColor; /* Колір іконки успадковується */
}
/* Стиль неактивної кнопки Send (тексту немає, не isLoading) */
.sendButtonInactive {
  composes: sendStopBase; /* Успадковуємо базові стилі */
  border: 2px solid var(--text-color-placeholder); /* Сіра рамка */
  background: transparent;
  color: var(--text-color-placeholder); /* Сіра іконка */
  opacity: 0.6; /* Трохи прозоріша */
  cursor: default; /* Курсор за замовчуванням */
}
/* Стиль активної кнопки Send (текст є, не isLoading) */
.sendButtonActive {
  composes: sendStopBase;
  border: none; /* Без рамки */
  background: var(--text-color-dark); /* Чорний/темний фон */
  color: #FFFFFF; /* Біла іконка */
}
.sendButtonActive:hover {
  background: #000000; /* Трохи темніший при наведенні */
}
/* Стиль кнопки Stop (isLoading = true) */
.stopButton {
  composes: sendStopBase;
  border: 2px solid #FF6B6B; /* Червона рамка */
  background: rgba(255, 107, 107, 0.1); /* Легкий червоний фон */
  color: #FF6B6B; /* Червона іконка */
}
.stopButton:hover {
  background: rgba(255, 107, 107, 0.2);
  border-color: #FF4D4D;
  color: #FF4D4D;
}

/* Стиль для заблокованого стану будь-якої actionButton */
.actionButton:disabled {
opacity: 0.5;
cursor: not-allowed;
/* Специфічні стилі для заблокованих кнопок, якщо потрібно */
}



.addButton,
.sourcesButton {
  width: 32px;
  padding: 0;
  background: var(--button-dark-bg);
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  border-radius: 16px;
  color: var(--icon-color);
}


.addButton svg,
.sourcesButton svg {
    width: 16px;
    height: 16px;
}

.addButton { left: 25px; }
.sourcesButton { left: 65px; }

.reasoningButton {
  left: 105px;
  padding: 0 12px; 
  gap: 8px;
  background: var(--button-dark-bg);
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  border-radius: 33px; 
  color: var(--icon-color);
  font-family: 'Roboto', sans-serif;
  font-size: 14px;
  line-height: 16px; 
}
.reasoningButton svg {
    width: 10px;
    height: 16px;
    flex-shrink: 0;
}
.reasoningButton span {
    height: 16px;
    display: inline-block;
}

