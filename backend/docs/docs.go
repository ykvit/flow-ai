// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/ykvit/flow-ai/issues"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/chats": {
            "get": {
                "description": "Retrieves a list of all chats, sorted by the most recently updated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "List all chats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/flow-ai_backend_internal_model.Chat"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/chats/messages": {
            "post": {
                "description": "Sends a new message and initiates a real-time stream of the assistant's response.\nSends a new message and initiates a real-time stream of the assistant's response (SSE).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Create a message and stream the response",
                "parameters": [
                    {
                        "description": "Message Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_service.CreateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of response chunks",
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_model.StreamResponse"
                        }
                    },
                    "400": {
                        "description": "Sent as a stream error event",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/chats/{chatID}": {
            "get": {
                "description": "Retrieves the full history for a single chat's active branch.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Get a single chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_model.FullChat"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently deletes a chat and all its associated messages.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Delete a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/chats/{chatID}/messages/{messageID}/regenerate": {
            "post": {
                "description": "Creates a new response for a previous user prompt.\nCreates a new response for a previous user prompt (SSE).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Regenerate a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ID of the assistant message to regenerate",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Regeneration options",
                        "name": "regenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_service.RegenerateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of new response chunks",
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_model.StreamResponse"
                        }
                    },
                    "400": {
                        "description": "Sent as a stream error event",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Sent as a stream error event",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/chats/{chatID}/title": {
            "put": {
                "description": "Manually renames a chat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Update a chat's title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New title",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.UpdateTitleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/models": {
            "get": {
                "description": "Gets a list of all models available locally in Ollama.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "List local models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_llm.ListModelsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a model from the local Ollama storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Delete a local model",
                "parameters": [
                    {
                        "description": "Model Name to Delete",
                        "name": "modelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_llm.DeleteModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/models/pull": {
            "post": {
                "description": "Downloads a model from the Ollama registry. This is a streaming endpoint.\nDownloads a model from the Ollama registry. This is a streaming endpoint (SSE).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Pull a new model",
                "parameters": [
                    {
                        "description": "Model Name to Pull",
                        "name": "modelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_llm.PullModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of progress status",
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_llm.PullStatus"
                        }
                    },
                    "400": {
                        "description": "Sent as a stream error event",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/models/show": {
            "post": {
                "description": "Retrieves detailed information about a specific model.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Show model info",
                "parameters": [
                    {
                        "description": "Model Name",
                        "name": "modelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_llm.ShowModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_llm.ModelInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/settings": {
            "get": {
                "description": "Retrieves the current global settings for the application.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Get application settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_service.Settings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates the global settings. Models must be available in Ollama.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Update application settings",
                "parameters": [
                    {
                        "description": "New settings to apply",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flow-ai_backend_internal_service.Settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "flow-ai_backend_internal_llm.DeleteModelRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "mistral:7b"
                }
            }
        },
        "flow-ai_backend_internal_llm.ListModelsResponse": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flow-ai_backend_internal_llm.Model"
                    }
                }
            }
        },
        "flow-ai_backend_internal_llm.Model": {
            "type": "object",
            "properties": {
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "flow-ai_backend_internal_llm.ModelInfo": {
            "type": "object",
            "properties": {
                "modelfile": {
                    "type": "string"
                },
                "parameters": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "flow-ai_backend_internal_llm.PullModelRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "mistral:7b"
                },
                "stream": {
                    "type": "boolean"
                }
            }
        },
        "flow-ai_backend_internal_llm.PullStatus": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "integer"
                },
                "digest": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "flow-ai_backend_internal_llm.RequestOptions": {
            "type": "object",
            "properties": {
                "repeat_penalty": {
                    "type": "number",
                    "example": 1.1
                },
                "seed": {
                    "type": "integer",
                    "example": 42
                },
                "system": {
                    "type": "string",
                    "example": "You are a senior database administrator."
                },
                "temperature": {
                    "type": "number",
                    "example": 0.7
                },
                "top_k": {
                    "type": "integer",
                    "example": 40
                },
                "top_p": {
                    "type": "number",
                    "example": 0.9
                }
            }
        },
        "flow-ai_backend_internal_llm.ShowModelRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "qwen3:8b"
                }
            }
        },
        "flow-ai_backend_internal_model.Chat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-09-08T14:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "4b3b5a34-571f-47e3-abd1-a7dbee9d92fe"
                },
                "model": {
                    "type": "string",
                    "example": "qwen:0.5b"
                },
                "title": {
                    "type": "string",
                    "example": "History of the Roman Empire"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-09-08T14:05:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "default-user"
                }
            }
        },
        "flow-ai_backend_internal_model.FullChat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-09-08T14:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "4b3b5a34-571f-47e3-abd1-a7dbee9d92fe"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flow-ai_backend_internal_model.Message"
                    }
                },
                "model": {
                    "type": "string",
                    "example": "qwen:0.5b"
                },
                "title": {
                    "type": "string",
                    "example": "History of the Roman Empire"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-09-08T14:05:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "default-user"
                }
            }
        },
        "flow-ai_backend_internal_model.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "The Roman Empire fell in 476 AD."
                },
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                },
                "metadata": {
                    "type": "object"
                },
                "model": {
                    "type": "string",
                    "example": "qwen:0.5b"
                },
                "parent_id": {
                    "type": "string",
                    "example": "f0e9d8c7-b6a5-4321-fedc-ba9876543210"
                },
                "role": {
                    "type": "string",
                    "example": "assistant"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-09-08T14:05:00Z"
                }
            }
        },
        "flow-ai_backend_internal_model.StreamResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello"
                },
                "context": {
                    "type": "object"
                },
                "done": {
                    "type": "boolean",
                    "example": false
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "flow-ai_backend_internal_service.CreateMessageRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "chat_id": {
                    "type": "string",
                    "example": "4b3b5a34-571f-47e3-abd1-a7dbee9d92fe"
                },
                "content": {
                    "type": "string",
                    "minLength": 1,
                    "example": "What is the difference between SQL and NoSQL databases?"
                },
                "model": {
                    "type": "string",
                    "example": "qwen3:8b"
                },
                "options": {
                    "$ref": "#/definitions/flow-ai_backend_internal_llm.RequestOptions"
                },
                "support_model": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                }
            }
        },
        "flow-ai_backend_internal_service.RegenerateMessageRequest": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "description": "Included for client-side context.",
                    "type": "string"
                },
                "model": {
                    "type": "string",
                    "example": "mistral:7b"
                },
                "options": {
                    "description": "Allows overriding generation parameters, e.g., for a more creative response.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/flow-ai_backend_internal_llm.RequestOptions"
                        }
                    ]
                },
                "system_prompt": {
                    "type": "string"
                }
            }
        },
        "flow-ai_backend_internal_service.Settings": {
            "type": "object",
            "required": [
                "main_model"
            ],
            "properties": {
                "main_model": {
                    "description": "The primary model for new chats. Must be an available local model.",
                    "type": "string",
                    "example": "qwen3:8b"
                },
                "support_model": {
                    "description": "A model for background tasks like title generation. Can be the same as the main model.",
                    "type": "string",
                    "example": "gemma3:4b"
                },
                "system_prompt": {
                    "type": "string",
                    "example": "You are a helpful assistant that always answers in Markdown format."
                }
            }
        },
        "internal_api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_api.StatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_api.UpdateTitleRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "My Custom Chat Title"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Endpoints for creating, retrieving, and managing conversations.",
            "name": "Chats"
        },
        {
            "description": "Endpoints for listing, downloading, and managing local Ollama models.",
            "name": "Models"
        },
        {
            "description": "Endpoints for managing global application settings.",
            "name": "Settings"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Flow-AI API",
	Description:      "This is the API server for the Flow-AI application. It provides endpoints for managing chats, models, and application settings.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
